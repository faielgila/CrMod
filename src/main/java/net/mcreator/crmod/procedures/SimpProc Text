    //New code
    public static void ExecuteProcedure(Map<String, Object> dependencies) {
		// Throw a dependency error if entity is left empty
		if (dependencies.get("entity") == null) {
			System.err.println("Failed to load dependency entity for procedure SimpProc!");
		}
		ClassSlotHelper sltHlpr = new ClassSlotHelper((Entity) dependencies.get("entity"));

		if (IngotAlemItem.block == sltHlpr.getItemStackInSlot(0).getItem()){
			ItemStack outputSlotStack = sltHlpr.getItemStackInSlot(1);
			if (ItemStack.EMPTY == outputSlotStack) {
				sltHlpr.increaseItemAmountInSlot(0, -1);
				sltHlpr.setItemStackInSlot(1, new ItemStack(ElemAeItem.block, 1));
			}
			else if (ElemAeItem.block == outputSlotStack.getItem()) {
				sltHlpr.increaseItemAmountInSlot(0, -1);
				sltHlpr.increaseItemAmountInSlot(1, 1);
			}
		}

		sltHlpr.currentPlayer.detectAndSendChanges();
	}


	//Old code
    public static void ExecuteProcedure(Map<String, Object> dependencies) {
		System.out.println("\n\nUsing MCreator generated code now!\n\n");
		if (dependencies.get("entity") == null) {
			System.err.println("Failed to load dependency entity for procedure SimpProc!");
			return;
		}
		Entity entity = (Entity) dependencies.get("entity");
		if ((new ItemStack(IngotAlemItem.block, (int) (1)).getItem() == (new Object() {
			public ItemStack getItemStack(int sltid) {
				Entity _ent = entity;
				if (_ent instanceof ServerPlayerEntity) {
					Container _current = ((ServerPlayerEntity) _ent).openContainer;
					if (_current instanceof Supplier) {
						Object invobj = ((Supplier) _current).get();
						if (invobj instanceof Map) {
							return ((Slot) ((Map) invobj).get(sltid)).getStack();
						}
					}
				}
				return ItemStack.EMPTY;
			}
		}.getItemStack((int) (0))).getItem())) {
			{
				Entity _ent = entity;
				if (_ent instanceof ServerPlayerEntity) {
					Container _current = ((ServerPlayerEntity) _ent).openContainer;
					if (_current instanceof Supplier) {
						Object invobj = ((Supplier) _current).get();
						if (invobj instanceof Map) {
							((Slot) ((Map) invobj).get((int) (0))).decrStackSize((int) (1));
							_current.detectAndSendChanges();
						}
					}
				}
			}
			if (entity instanceof PlayerEntity) {
				Container _current = ((PlayerEntity) entity).openContainer;
				if (_current instanceof Supplier) {
					Object invobj = ((Supplier) _current).get();
					if (invobj instanceof Map) {
						ItemStack _setstack = new ItemStack(ElemAeItem.block, (int) (1));
						_setstack.setCount((int) ((new Object() {
							public int getAmount(int sltid) {
								if (entity instanceof ServerPlayerEntity) {
									Container _current = ((ServerPlayerEntity) entity).openContainer;
									if (_current instanceof Supplier) {
										Object invobj = ((Supplier) _current).get();
										if (invobj instanceof Map) {
											ItemStack stack = ((Slot) ((Map) invobj).get(sltid)).getStack();;
											if (stack != null)
												return stack.getCount();
										}
									}
								}
								return 0;
							}
						}.getAmount((int) (1))) + 1));
						((Slot) ((Map) invobj).get((int) (1))).putStack(_setstack);
						_current.detectAndSendChanges();
					}
				}
			}
		}
	}